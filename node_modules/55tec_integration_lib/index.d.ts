import 'reflect-metadata';
import { Channel } from './model/protocol';
import { Handler as IntegratorHandler } from './model/protocol/integrator';
import { Request } from './model/protocol/server/resource';
import { Client as Server } from "./model/protocol/server";
import { Client as IntegrationClient } from "./model/protocol/integration";
import { Credential } from "./model/protocol/integrator/credential";
import { Integrable } from "./model";
/**
 * @TODO add integration model definition
 */
export declare function listen(channel: Channel, handler: IntegratorHandler): Promise<void>;
export declare type FlowHookParser = (req: Request) => {
    action?: string;
    credentials: Credential[];
    data: Integrable | Integrable[];
}[];
export declare function flowHook(integrationClient: IntegrationClient, server: Server, actions: {
    [action: string]: FlowHookParser;
}): Promise<void>;
