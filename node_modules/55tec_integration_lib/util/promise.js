"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentifiablePromise = exports.Timeout = exports.NamedError = void 0;
class NamedError extends Error {
    constructor(message, name) {
        super(message);
        this.name = name;
        Object.setPrototypeOf(this, NamedError.prototype);
    }
    toJSON() {
        return {
            message: this.message,
            name: this.name,
        };
    }
}
exports.NamedError = NamedError;
class Timeout {
    constructor(resolution, time) {
        this.time = time;
        this.createdAt = new Date();
        if (time !== Infinity)
            this.id = setTimeout(() => {
                this.id = undefined;
                resolution();
            }, time);
    }
    stop() {
        if (this.id)
            clearTimeout(this.id);
    }
    timeLeft() {
        return Math.max(0, this.time - ((new Date()).getTime() - this.createdAt.getTime()));
    }
}
exports.Timeout = Timeout;
class IdentifiablePromise {
    constructor(id, context, registry) {
        this.id = id;
        this.done = false;
        this.registry = registry;
        this.context = context;
        if (this.registry)
            this.registry[this.id] = this;
        this.resolve = (res) => IdentifiablePromise.DEFAULT_RESOLUTION(this);
        this.reject = (err) => IdentifiablePromise.DEFAULT_RESOLUTION(this);
        this.promise = new Promise((resolve, reject) => {
            this.resolve = (res) => IdentifiablePromise.DEFAULT_RESOLUTION(this) && resolve(res);
            this.reject = (err) => IdentifiablePromise.DEFAULT_RESOLUTION(this) && reject(err);
        });
    }
    static DEFAULT_RESOLUTION(req) {
        req.done = true;
        if (req.registry)
            delete req.registry[req.id];
        if (req.timeout)
            req.timeout.stop();
        return true;
    }
    then(onFulfilled, onRejected) {
        return this.promise = this.promise.then(onFulfilled, onRejected);
    }
    catch(handler) {
        return this.promise = this.promise.catch(handler);
    }
    finally(handler) {
        return this.promise = this.promise.finally(handler);
    }
    isDone() { return this.done; }
    setTimeout(time) {
        this.timeout = new Timeout(() => {
            if (this.done)
                return;
            this.reject(new NamedError(`The request "${this.id}" timed out after ${time}ms`, 'message_timeout'));
        }, time);
    }
    untilTimeout() {
        if (!this.timeout)
            return Infinity;
        return this.timeout.timeLeft();
    }
    get [Symbol.toStringTag]() {
        return 'IdentifiablePromise';
    }
}
exports.IdentifiablePromise = IdentifiablePromise;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInByb21pc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsTUFBYSxVQUFXLFNBQVEsS0FBSztJQUlqQyxZQUFZLE9BQWUsRUFBRSxJQUFZO1FBQ3JDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsTUFBTTtRQUNGLE9BQU87WUFDSCxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87WUFDckIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1NBQ2xCLENBQUM7SUFDTixDQUFDO0NBRUo7QUFqQkQsZ0NBaUJDO0FBRUQsTUFBYSxPQUFPO0lBTWhCLFlBQVksVUFBbUMsRUFBRSxJQUFZO1FBQ3pELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUU1QixJQUFJLElBQUksS0FBSyxRQUFRO1lBQUUsSUFBSSxDQUFDLEVBQUUsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUM3QyxJQUFJLENBQUMsRUFBRSxHQUFHLFNBQVMsQ0FBQztnQkFDcEIsVUFBVSxFQUFFLENBQUM7WUFDakIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELElBQUk7UUFDQSxJQUFJLElBQUksQ0FBQyxFQUFFO1lBQUUsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsUUFBUTtRQUNKLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8s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