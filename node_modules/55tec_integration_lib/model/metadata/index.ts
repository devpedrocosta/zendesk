
export enum Lang {
    PT_BR = 'pt-BR',
}

export type Label = {
    [lang in Lang]?: string
};

export enum ConstraintType {
    IN = 'in',
    MIN = 'min',
    MAX = 'max',
    PATTERN = 'pattern',
    HAS = 'has'
}

export type Item = {
    value: string;
    label: Label;
}

export type Constraint = {
    reverse: boolean;
    type: ConstraintType;
    value: string | number | Item[] | {[f: string]: any};
}

export enum TransformType {
    MASK = 'mask',
}

export type Transform = {
    type: TransformType;
    params: any[];
}

export enum MetafieldType {
    TEXT = 'text',
    LIST = 'list',
    OBJECT = 'object',
    NUMBER = 'number',
    DATE = 'date',
    ID = 'id',
    BOOLEAN = "boolean",
    REFERENCE = "reference",
}

export type Metafield = {
    name?: string,
    externalName?: string,
    required?: boolean,
    label?: Label,
    constraints?: Constraint[],
    transforms?: Transform[],
    isPopulated?: boolean,
    type?: MetafieldType,
    defaultValue?: string | number | Item[] | {[f: string]: any}
}

export type Metadata = {
    label?: Label,
    fields: Metafield[]
}
