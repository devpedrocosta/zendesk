export declare enum Lang {
    PT_BR = "pt-BR"
}
export declare type Label = {
    [lang in Lang]?: string;
};
export declare enum ConstraintType {
    IN = "in",
    MIN = "min",
    MAX = "max",
    PATTERN = "pattern",
    HAS = "has"
}
export declare type Item = {
    value: string;
    label: Label;
};
export declare type Constraint = {
    reverse: boolean;
    type: ConstraintType;
    value: string | number | Item[] | {
        [f: string]: any;
    };
};
export declare enum TransformType {
    MASK = "mask"
}
export declare type Transform = {
    type: TransformType;
    params: any[];
};
export declare enum MetafieldType {
    TEXT = "text",
    LIST = "list",
    OBJECT = "object",
    NUMBER = "number",
    DATE = "date",
    ID = "id",
    BOOLEAN = "boolean",
    REFERENCE = "reference"
}
export declare type Metafield = {
    name?: string;
    externalName?: string;
    required?: boolean;
    label?: Label;
    constraints?: Constraint[];
    transforms?: Transform[];
    isPopulated?: boolean;
    type?: MetafieldType;
    defaultValue?: string | number | Item[] | {
        [f: string]: any;
    };
};
export declare type Metadata = {
    label?: Label;
    fields: Metafield[];
};
