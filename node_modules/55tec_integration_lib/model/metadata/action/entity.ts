import pluralize from "pluralize";

export type CustomEntity = any;

export enum _Entity {
    CUSTOMER = "customers",
    INCIDENT = "incidents",
    USER = "users",
    PIPELINE = "pipelines",
    CALL = "calls",
    CHAT = "chats",
    MESSAGE = 'messages',
    SALE = "sales",
    FUNCTION = "functions",
    BOT = "bots",
    TEMPLATE = "templates",
    REQUEST = 'requests',
}

export type Entity = _Entity | CustomEntity;

export const Entity = new Proxy({..._Entity} as any as {[k in _Entity]: _Entity}, {
    get: (target: {[k in _Entity]: _Entity}, p: string | number | symbol, receiver: any) => {
        if (typeof p === 'symbol') return undefined;
        if (typeof p === 'number') return undefined;

        return target[p as _Entity] || p.split('/').map(p => pluralize(('' + p).toLowerCase().replace(/_/g, '-'))).join('/');
    }
}) as any as Entity;
