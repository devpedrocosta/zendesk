export type Custom = any;

export enum CRUD {
    CREATE = "create",
    FIND = "find",
    LIST = "list",
    UPDATE = "update",
    DELETE = "delete",
}

export enum Auth {
    REFRESH_TOKEN = "refresh-token",
    GET_TOKEN = "get-token",
    GET_OAUTH_URL = "get-oauth-url",
    GET_DEVICE_CODE = 'get-device-code',
    GET_SESSION = "get-session"
}

export enum Meta {
    GET_METADATA = "get-metadata"
}

export enum Browser {
    SETUP = "setup",
    SHOW = 'show',
    RESIZE = 'resize'
}

export type Operation = CRUD | Auth | Meta | Browser | Custom;

export const Operation = new Proxy({ ...CRUD, ...Auth, ...Meta, ...Browser } as any as {[k in Operation]: Operation}, {
    get: (target: {[k in Operation]: Operation}, p: string | number | symbol, receiver: any) => {
        if (typeof p === 'symbol') return undefined;
        if (typeof p === 'number') return undefined;
        return target[p as Operation] || ('' + p).toLowerCase().replace(/_/g, '-');
    }
}) as any as Operation;

