"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = exports.isResponse = exports.isRequest = void 0;
const uuid_1 = require("uuid");
const __1 = require("../");
const response_1 = require("../integrator/response");
const __2 = require("../");
const __3 = require("../");
function isRequest(target) {
    return (!!target
        && (typeof target === 'object')
        && (typeof target.id === 'string')
        && (target.channel === 'integration')
        && (target.action)
        && (typeof target.action === 'string')
        && (target.body === undefined || (target.body && (typeof target.body === 'object'))));
}
exports.isRequest = isRequest;
function isResponse(target) {
    return (!!target
        && (typeof target === 'object')
        && (typeof target.id === 'string')
        && (target.channel === 'integration')
        && (target.response)
        && (typeof target.response === 'object')
        && (Object.values(__2.StatusCode).includes(('' + target.response.code)))
        && (!target.response.error
            || ((typeof target.response.error === 'string')
                || (typeof target.response.error === 'object'
                    && target.response.error.message
                    && typeof target.response.error.message === 'string'))));
}
exports.isResponse = isResponse;
/**
 * @TODO implements resource discovery to avoid having to make all actions hardcoded
 */
class Client extends __1.Client {
    async send(integration, action, body) {
        return super.send(integration, action, body);
    }
    isRequest(target) { return isRequest(target); }
    isResponse(target) { return isResponse(target); }
    implementsProtocol(target) {
        return this.isRequest(target) || this.isResponse(target);
    }
    async handleUnregistredMessage(message) { }
    async build(integration, action, body) {
        return {
            id: uuid_1.v4(),
            channel: 'integration',
            action,
            integration,
            resources: [],
            body,
        };
    }
    parseResolution(data) {
        if (!this.isResponse(data))
            throw new __3.ResolutionError('response', data);
        if (data.response.error)
            throw new response_1.ResponseError(typeof data.response.error === 'string' ? data.response.error : data.response.error.message, data.response.code, data.response.error && typeof data.response.error === 'object' ? data.response.error.name : "");
        return data.response.body;
    }
}
exports.Client = Client;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQkFBa0M7QUFFbEMsMkJBQXdDO0FBRXhDLHFEQUlnQztBQUNoQywyQkFBaUM7QUFFakMsMkJBQXNDO0FBa0J0QyxTQUFnQixTQUFTLENBQUMsTUFBVztJQUVqQyxPQUFPLENBQ0gsQ0FBQyxDQUFDLE1BQU07V0FDTCxDQUFDLE9BQU8sTUFBTSxLQUFLLFFBQVEsQ0FBQztXQUM1QixDQUFDLE9BQU8sTUFBTSxDQUFDLEVBQUUsS0FBSyxRQUFRLENBQUM7V0FDL0IsQ0FBQyxNQUFNLENBQUMsT0FBTyxLQUFLLGFBQWEsQ0FBQztXQUNsQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7V0FDZixDQUFDLE9BQU8sTUFBTSxDQUFDLE1BQU0sS0FBSyxRQUFRLENBQUM7V0FDbkMsQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLFNBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUN2RixDQUFDO0FBRU4sQ0FBQztBQVpELDhCQVlDO0FBRUQsU0FBZ0IsVUFBVSxDQUFDLE1BQVc7SUFFbEMsT0FBTyxDQUNILENBQUMsQ0FBQyxNQUFNO1dBQ0wsQ0FBQyxPQUFPLE1BQU0sS0FBSyxRQUFRLENBQUM7V0FDNUIsQ0FBQyxPQUFPLE1BQU0sQ0FBQyxFQUFFLEtBQUssUUFBUSxDQUFDO1dBQy9CLENBQUMsTUFBTSxDQUFDLE9BQU8sS0FBSyxhQUFhLENBQUM7V0FDbEMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1dBQ2pCLENBQUMsT0FBTyxNQUFNLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQztXQUNyQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBVSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLE1BQU0sQ0FB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