import { Channel } from "../../";
import { Client } from "../";
import { Integration as Alias } from "../../../";
import { newAction } from "../../../metadata/action";
import { Entity } from "../../../metadata/action/entity";
import { Operation } from "../../../metadata/action/operation";

describe('Integration protocol', () => {

    it('should request an action to be processed on Messaging Bridge integration', async () => {

        let channelHandlers: any = [];

        let id = '';

        let channel: Channel = {
            on(event: string, handler: (res: any, ...args: any[]) => any): any {
                channelHandlers.push(handler);
                // console.log('on', event, handler.toString());
            },
            send(req: any, ...args: any[]): any {
                console.log('send', req, ...args);
                if (req && req.id) id = req.id;
            }
        };

        let client = new Client(channel);
        client.send(Alias.MESSAGING_BRIDGE, newAction(Entity.MESSAGE, Operation.CREATE), {
            data: {
                content: 'Hello'
            }
        });

        // setTimeout(function() {
        //
        //     for(let handler of channelHandlers) handler({
        //         id,
        //         channel: 'server',
        //         type: 'registry',
        //     });
        //
        // }, 1500);

    });


});
