"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Router = exports.SchedulingStrategy = exports.ResponseImpl = exports.RequestImpl = exports.Method = exports.HTTPError = void 0;
const promise_1 = require("../../../util/promise");
const fs_1 = __importDefault(require("fs"));
class HTTPError extends Error {
    constructor(message, code = '500', name = 'error') {
        super(message);
        this.code = code;
        this.name = name;
    }
    toJSON() {
        return {
            message: this.message,
            code: this.code,
            name: this.name,
        };
    }
    toString() {
        return `${this.code} - ${this.name} - ${this.message}`;
    }
}
exports.HTTPError = HTTPError;
var Method;
(function (Method) {
    Method["GET"] = "get";
    Method["POST"] = "post";
    Method["PUT"] = "put";
    Method["PATCH"] = "patch";
    Method["DELETE"] = "delete";
})(Method = exports.Method || (exports.Method = {}));
class RequestImpl {
    constructor(context) {
        this.urn = context.urn;
        this.method = context.method;
        this.query = context.query;
        this.body = context.body;
        this.params = context.params;
        this.headers = context.headers;
        this.connection = context.connection;
    }
    header(header) {
        return this.headers[header.toLowerCase()];
    }
    ;
}
exports.RequestImpl = RequestImpl;
class ResponseImpl extends promise_1.IdentifiablePromise {
    constructor() {
        super(...arguments);
        this.code = '200';
    }
    status(value) {
        this.code = '' + value;
        return this;
    }
    json(data, status) {
        if (status)
            this.status(status);
        this.body = data;
        if ('2' !== this.code[0]) {
            let message = data;
            if (typeof message === 'object')
                message = data.message || data.error || data.reason || data.response || data.payload || JSON.stringify(data);
            return this.reject(new HTTPError(message, this.code, data.name));
        }
        this.resolve({
            code: this.code,
            body: this.body,
            headers: this.headers,
        });
    }
    end() {
        if ('2' !== this.code[0])
            return this.reject(new HTTPError('', this.code, this.name));
        this.resolve({
            code: this.code,
            headers: this.headers,
        });
    }
    header(header, value) {
        if (!this.headers)
            this.headers = {};
        this.headers[header.toLowerCase()] = value;
        return this;
    }
    sendFile(path) {
        fs_1.default.readFile(path, 'utf-8', (err, data) => {
            if (err)
                return this.reject(new HTTPError(err.message, '500'));
            if ('2' !== this.code[0])
                return this.reject(new HTTPError(data, this.code, this.name));
            this.resolve({
                code: this.code,
                headers: {
                    ...(this.headers || {}),
                },
                body: data
            });
        });
    }
    text(content) {
        return this.send(content);
    }
    send(data) {
        if ('2' !== this.code[0])
            return this.reject(new HTTPError(data, this.code, this.name));
        this.resolve({
            code: this.code,
            headers: { ...(this.headers || {}) },
            body: data,
        });
    }
}
exports.ResponseImpl = ResponseImpl;
var StatusScheduling;
(function (StatusScheduling) {
    StatusScheduling["FIRST"] = "first";
    StatusScheduling["MIDDLE"] = "middle";
    StatusScheduling["LAST"] = "last";
})(StatusScheduling || (StatusScheduling = {}));
function* SchedulingStrategy(handlers) {
    let i = 0;
    let status = StatusScheduling.FIRST;
    while (i < handlers.length) {
        const handler = handlers[i++];
        yield { handler, status };
        status = (i === handlers.length) ? StatusScheduling.LAST : StatusScheduling.MIDDLE;
    }
}
exports.SchedulingStrategy = SchedulingStrategy;
const routerMiddleware = (target, propertyName, descriptor) => {
    const method = descriptor.value;
    descriptor.value = function () {
        const [urn, ...handlers] = Object.values(arguments);
        const newArgument = async (req, res) => {
            const scheduling = SchedulingStrategy(handlers);
            // initializing
            let nextIterator = scheduling.next();
            while (!nextIterator.done) {
                const { value: { status, handler } } = nextIterator;
                if (status === StatusScheduling.LAST)
                    return handler(req, res);
                let useNext = false;
                await handler(req, res, () => {
                    nextIterator = scheduling.next();
                    useNext = true;
                });
                if (!useNext)
                    return;
            }
        };
        return method.call(this, urn, newArgument);
    };
};
class Router {
    constructor() {
        this.resources = {
            [Method.GET]: {},
            [Method.POST]: {},
            [Method.PUT]: {},
            [Method.PATCH]: {},
            [Method.DELETE]: {},
        };
    }
    get(urn, ...handlers) {
        const [handler] = handlers;
        return this.register(Method.GET, urn, handler);
    }
    post(urn, ...handlers) {
        const [handler] = handlers;
        return this.register(Method.POST, urn, handler);
    }
    put(urn, ...handlers) {
        const [handler] = handlers;
        return this.register(Method.PUT, urn, handler);
    }
    patch(urn, ...handlers) {
        const [handler] = handlers;
        return this.register(Method.PATCH, urn, handler);
    }
    delete(urn, ...handlers) {
        const [handler] = handlers;
        return this.register(Method.DELETE, urn, handler);
    }
    register(method, urn, handler) {
        this.resources[method][urn] = handler;
        return this;
    }
    getHandler(method, urn) {
        return this.resources[method][urn];
    }
}
__decorate([
    routerMiddleware,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Function]),
    __metadata("design:returntype", void 0)
], Router.prototype, "get", null);
__decorate([
    routerMiddleware,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Function]),
    __metadata("design:returntype", void 0)
], Router.prototype, "post", null);
__decorate([
    routerMiddleware,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Function]),
    __metadata("design:returntype", void 0)
], Router.prototype, "put", null);
__decorate([
    routerMiddleware,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Function]),
    __metadata("design:returntype", void 0)
], Router.prototype, "patch", null);
__decorate([
    routerMiddleware,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Function]),
    __metadata("design:returntype", void 0)
], Router.prototype, "delete", null);
exports.Router = Router;
//# sourceMappingURL=data:application/json;base64,