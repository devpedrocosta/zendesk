"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
require("reflect-metadata");
const inversify_1 = require("inversify");
const request_promise_1 = __importDefault(require("request-promise"));
const url_1 = require("url");
const querystring_1 = __importDefault(require("querystring"));
const request_1 = require("../model/protocol/integrator/request");
const response_1 = require("../model/protocol/integrator/response");
const credential_1 = require("../model/protocol/integrator/credential");
const protocol_1 = require("../model/protocol");
let Service = class Service {
    async request(url, method, body, headers = {}, secure = true) {
        if (body && method === "get") {
            let parsed = new url_1.URL(url);
            body = {
                ...querystring_1.default.parse(parsed.search),
                ...body
            };
            url = `${parsed.origin}${parsed.pathname}?${querystring_1.default.stringify(body)}${parsed.hash}`;
        }
        headers = {
            'Content-Type': 'application/json',
            ...headers
        };
        let result = await request_promise_1.default({
            "rejectUnauthorized": secure,
            "url": url,
            "method": method,
            "body": method !== "get" ? JSON.stringify(body) : undefined,
            "headers": headers,
            "simple": false,
            "resolveWithFullResponse": true
        });
        if (("" + result.statusCode)[0] !== "2")
            throw new request_1.RequestError(result.body, result.statusCode);
        if (!result.body)
            return {};
        let data = result.body;
        if (typeof data === "string")
            data = JSON.parse(result.body.trim() || "{}");
        return data;
    }
    async save(ctx) {
        throw new response_1.ResponseError(`Not implemented yet`, protocol_1.StatusCode.SERVICE_UNAVAILABLE);
    }
    async find(ctx) {
        throw new response_1.ResponseError(`Not implemented yet`, protocol_1.StatusCode.SERVICE_UNAVAILABLE);
    }
    async list(ctx) {
        throw new response_1.ResponseError(`Not implemented yet`, protocol_1.StatusCode.SERVICE_UNAVAILABLE);
    }
    async delete(ctx) {
        throw new response_1.ResponseError(`Not implemented yet`, protocol_1.StatusCode.SERVICE_UNAVAILABLE);
    }
    getWWWURL(entity, id, ctx) {
        throw new response_1.ResponseError(`Not implemented yet`, protocol_1.StatusCode.SERVICE_UNAVAILABLE);
    }
};
Service.DEFAULT_PAGE_SIZE = 100;
Service = __decorate([
    inversify_1.injectable()
], Service);
exports.default = Service;
class Context {
    constructor(req) {
        this.auth = {};
        this.id = req.id;
        if (!req.body)
            throw new request_1.RequestError(`Missing request body: ${JSON.stringify({ ...req, "credentials": undefined })}`, "400");
        this.action = req.action;
        let { credentials = [], projection = [], data = {}, pagination = {
            "page": 0,
            "size": Service.DEFAULT_PAGE_SIZE
        }, cursor, options = {} } = req.body;
        this.credentials = credentials;
        for (let c of credentials) { // @ts-ignore
            this.auth[c.type] = c.value;
        }
        this.payload = data;
        this.opts = options;
        // if (!cursor) cursor = { limit: pagination.size, current: pagination.page };
        this.params = { projection, pagination, cursor };
        this.resourceMap = (req.resources || []).reduce((map, e) => {
            map[e.type] = e;
            return map;
        }, {});
        this.origin = req.origin;
        this.timeout = req.timeout;
    }
    getAuthHeader() {
        // if (this.auth[Type.KEY]) return {'Authorization': `Bearer ${this.auth[Type.KEY]}`};
        if (this.auth[credential_1.Type.TOKEN])
            return { 'Authorization': `Bearer ${this.auth[credential_1.Type.TOKEN]}` };
        if (this.auth[credential_1.Type.BASIC]) {
            let { id, secret } = this.auth[credential_1.Type.BASIC];
            return { 'Authorization': `Basic ${Buffer.from(`${id}:${secret}`).toString("base64")}` };
        }
        return {};
    }
    hasResource(type) {
        return !!this.resourceMap[type];
    }
}
exports.Context = Context;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSw0QkFBMEI7QUFDMUIseUNBQXVDO0FBQ3ZDLHNFQUFzQztBQUN0Qyw2QkFBMEI7QUFDMUIsOERBQXNDO0FBRXRDLGtFQU04QztBQUU5QyxvRUFLK0M7QUFVL0Msd0VBQTJGO0FBSTNGLGdEQUE2QztBQUk3QyxJQUFxQixPQUFPLEdBQTVCLE1BQXFCLE9BQU87SUFJeEIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFXLEVBQUUsTUFBd0MsRUFBRSxJQUFhLEVBQUUsVUFBa0IsRUFBRSxFQUFFLE1BQU0sR0FBRyxJQUFJO1FBRW5ILElBQUksSUFBSSxJQUFJLE1BQU0sS0FBSyxLQUFLLEVBQUU7WUFDMUIsSUFBSSxNQUFNLEdBQUcsSUFBSSxTQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDMUIsSUFBSSxHQUFHO2dCQUNILEdBQUcscUJBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztnQkFDbkMsR0FBRyxJQUFJO2FBQ1YsQ0FBQztZQUVGLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFFBQVEsSUFBSSxxQkFBVyxDQUFDLFNBQVMsQ0FBQyxJQUFXLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDbEc7UUFFRCxPQUFPLEdBQUc7WUFDTixjQUFjLEVBQUUsa0JBQWtCO1lBQ2xDLEdBQUcsT0FBTztTQUNiLENBQUM7UUFFRixJQUFJLE1BQU0sR0FBRyxNQUFNLHlCQUFPLENBQUM7WUFDdkIsb0JBQW9CLEVBQUUsTUFBTTtZQUM1QixLQUFLLEVBQUUsR0FBRztZQUNWLFFBQVEsRUFBRSxNQUFNO1lBQ2hCLE1BQU0sRUFBRSxNQUFNLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFD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